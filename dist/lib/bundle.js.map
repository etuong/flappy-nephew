{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./lib/sheen.js","webpack:///./lib/pipe.js","webpack:///./lib/game.js","webpack:///./lib/game_view.js","webpack:///./lib/flappy_sheen.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","sheen","[object Object]","properties","this","canvasHeight","y","x","width","height","gravity","lift","velocity","img","Image","src","nephew","flyAudio","document","getElementById","dieAudio","ctx","drawImage","flag","play","stayInFrame","stopAtBottom","cloneNode","pipe","canvasWidth","pipeWidth","minPipeHeight","maxPipeHeight","minSpaceHeight","maxSpaceHeight","topPipeHeight","getRandomInt","bottomPipeHeight","calculateBottomPipe","speed","scored","hitAudio","spaceHeight","getSpaceHeight","gradient","createLinearGradient","addColorStop","lineWidth","strokeStyle","strokeRect","fillStyle","fillRect","min","max","Math","floor","random","maxSpaceAvailable","isHit","inRangeHor","inRangeVer","lib_game","pipes","frameCount","movePipe","started","ended","score","forEach","hit","key","unbind","onload","drawFrame","font","textAlign","fillText","strokeText","save","shadowColor","restore","push","drawPipes","removeOffscreenPipes","draw","hitGround","drawEndScreen","drawScore","drawStartScreen","onScreenPipes","filter","isOffScreen","move","checkCollision","updateScore","game_view","game","animate","bind","animation","interval","setInterval","step","clearInterval","bindKeyToRestart","setTimeout","startGame","bindKeyToFly","up","bindKeyToStart","addEventListener","pristine","window","history","replaceState","location","href","form","Pristine","e","preventDefault","validate","style","display","Number","canvasEl","innerWidth","innerHeight","getContext","start"],"mappings":"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","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","class Sheen {\n    constructor(properties) {\n        this.canvasHeight = properties.canvasHeight;\n\n        // Initial position\n        this.y = (this.canvasHeight / 2);\n        this.x = 200;\n\n        // Size\n        this.width = 67;\n        this.height = 80;\n\n        // Physics\n        this.gravity = 0.7;\n        this.lift = -15;\n        this.velocity = 0;\n\n        // Sheen image\n        this.img = new Image();\n        this.img.src = `assets/${properties.nephew}.png`;\n\n        // Get audio for flying and dying\n        this.flyAudio = document.getElementById(\"flyAudio\");\n        this.dieAudio = document.getElementById(\"dieAudio\");\n    }\n\n    draw(ctx) {\n        ctx.drawImage(this.img, this.x, this.y);\n    }\n\n    hitGround() {\n        const flag = this.y === this.canvasHeight;\n        if (flag) {\n            this.dieAudio.play();\n        }\n        return flag;\n    }\n\n    move() {\n        this.velocity += this.gravity;\n        this.velocity *= 0.9;\n        this.y += this.velocity;\n        this.stayInFrame();\n        this.stopAtBottom();\n    }\n\n    stayInFrame() {\n        if (this.y > this.canvasHeight) {\n            this.y = this.canvasHeight;\n            this.velocity = 0;\n        }\n    }\n\n    stopAtBottom() {\n        if (this.y < 0) {\n            this.y = 0;\n            this.velocity = 0;\n        }\n    }\n\n    up() {\n        this.velocity += this.lift;\n        this.flyAudio.cloneNode(true).play();\n    }\n};\n\nexport default Sheen;","class Pipe {\n    constructor(properties) {\n        this.canvasHeight = properties.canvasHeight;\n        this.x = properties.canvasWidth;\n        this.width = properties.pipeWidth;\n\n        this.minPipeHeight = 100;\n        this.maxPipeHeight = 700;\n\n        this.minSpaceHeight = 160;\n        this.maxSpaceHeight = 240;\n\n        this.topPipeHeight = this.getRandomInt(this.minPipeHeight, this.maxPipeHeight + 1);\n        this.bottomPipeHeight = this.calculateBottomPipe();\n\n        this.speed = 5;\n        this.scored = false;\n\n        // Get audio for colliding\n        this.hitAudio = document.getElementById(\"hitAudio\");\n    }\n\n    calculateBottomPipe() {\n        const spaceHeight = this.getSpaceHeight();\n        return this.canvasHeight - this.topPipeHeight - spaceHeight;\n    }\n\n    draw(ctx) {\n        let gradient = ctx.createLinearGradient(this.x, 0, this.x + this.width, 0);\n        gradient.addColorStop(0, \"#33cc33\")\n        gradient.addColorStop(1, \"#99ff99\")\n\n        // Top pipe\n        ctx.lineWidth = 3;\n        ctx.strokeStyle = \"black\";\n        ctx.strokeRect(this.x, 0, this.width, this.topPipeHeight - 20);\n        ctx.fillStyle = gradient;\n        ctx.fillRect(this.x, 0, this.width, this.topPipeHeight - 20);\n        ctx.strokeRect(this.x - 5, this.topPipeHeight - 20, this.width + 10, 20);\n        ctx.fillRect(this.x - 5, this.topPipeHeight - 20, this.width + 10, 20);\n\n        // Bottom pipe\n        ctx.strokeRect(this.x, this.canvasHeight - (this.bottomPipeHeight - 20), this.width, this.bottomPipeHeight);\n        ctx.fillRect(this.x, this.canvasHeight - (this.bottomPipeHeight - 20), this.width, this.bottomPipeHeight);\n        ctx.strokeRect(this.x - 5, this.canvasHeight - this.bottomPipeHeight, this.width + 10, 20);\n        ctx.fillRect(this.x - 5, this.canvasHeight - this.bottomPipeHeight, this.width + 10, 20);\n    }\n\n    getRandomInt(min, max) {\n        return Math.floor(Math.random() * (max - min)) + min;\n    }\n\n    getSpaceHeight() {\n        const spaceAndBottomHeight = this.canvasHeight - this.topPipeHeight;\n        const maxSpaceAvailable = spaceAndBottomHeight - this.minPipeHeight;\n\n        if (maxSpaceAvailable > this.maxSpaceHeight) {\n            return this.getRandomInt(this.minSpaceHeight, this.maxSpaceHeight + 1);\n        } else {\n            return this.getRandomInt(this.minSpaceHeight, maxSpaceAvailable)\n        }\n    }\n\n    hit(sheen) {\n        const isHit = this.inRangeHor(sheen) && this.inRangeVer(sheen)\n        if (isHit && this.hitAudio) {\n            this.hitAudio.play();\n            this.hitAudio = null;\n        }\n        return isHit;\n    }\n\n    inRangeHor(sheen) {\n        return ((sheen.x > this.x) && (sheen.x < this.x + this.width)) || ((sheen.x + sheen.width > this.x) && (sheen.x + sheen.width < this.x + this.width))\n    }\n\n    inRangeVer(sheen) {\n        return ((sheen.y < this.topPipeHeight) || (sheen.y + sheen.height > this.canvasHeight - this.bottomPipeHeight))\n    }\n\n    isOffScreen() {\n        return this.x < -this.width;\n    }\n\n    move() {\n        this.x -= this.speed;\n    }\n}\n\nexport default Pipe;","import Sheen from \"./sheen\";\nimport Pipe from \"./pipe\";\n\nclass Game {\n    constructor(properties) {\n        this.properties = properties;\n\n        // Canvas size\n        this.width = properties.canvasWidth;\n        this.height = properties.canvasHeight;\n\n        this.sheen = new Sheen(properties);\n        this.pipes = [new Pipe(properties)];\n        this.frameCount = 0;\n        this.movePipe = true;\n        this.started = false;\n        this.ended = false;\n        this.score = 0;\n\n        this.img = new Image();\n        this.img.src = \"assets/background.jpg\";\n    }\n\n    checkCollision() {\n        this.pipes.forEach(pipe => {\n            if (pipe.hit(this.sheen)) {\n                key.unbind(\"space\");\n                this.movePipe = false;\n            }\n        })\n    }\n\n    draw(ctx) {\n        this.frameCount++;\n        this.img.onload = () => {\n            this.drawFrame(ctx);\n        }\n        this.drawFrame(ctx);\n    }\n    \n    drawEndScreen(ctx) {\n        // Score Box\n        ctx.lineWidth = 3;\n        ctx.strokeRect(192, 236, 96, 110);\n        ctx.fillStyle = \"#ffe6b3\";\n        ctx.fillRect(192, 236, 96, 110);\n\n        // Score box text\n        ctx.font = \"13px 'Press Start 2P\";\n        ctx.fillStyle = \"#ff6600\";\n        ctx.textAlign = \"center\";\n        ctx.fillText(\"SCORE\", 240, 280);\n        ctx.font = \"24px 'Press Start 2P\";\n        ctx.fillStyle = \"white\";\n        ctx.textAlign = \"center\";\n        ctx.strokeText(this.score, 240, 320);\n        ctx.fillText(this.score, 240, 320);\n\n        ctx.lineWidth = 10;\n        ctx.strokeStyle = \"white\";\n        ctx.strokeRect(86, 364, 508, 50);\n        ctx.fillStyle = \"#ff6600\";\n        ctx.fillRect(86, 364, 508, 50);\n\n        ctx.font = \"12px 'Press Start 2P'\"\n        ctx.save();\n        ctx.shadowColor = \"black\";\n        ctx.fillStyle = \"white\";\n        ctx.textAlign = \"center\";\n        ctx.fillText(\"PRESS SPACEBAR TO RESTART OR REFRESH PAGE TO CHANGE SETTINGS\", 340, 395);\n        ctx.restore();\n    }\n\n    drawFrame(ctx) {\n        ctx.drawImage(this.img, 0, 0);\n\n        if (this.frameCount % 110 == 0) {\n            this.pipes.push(new Pipe(this.properties))\n        }\n\n        this.drawPipes(ctx);\n        this.removeOffscreenPipes();\n        this.sheen.draw(ctx);\n\n        if (this.sheen.hitGround()) {\n            this.ended = true;\n            this.drawEndScreen(ctx)\n        }\n\n        this.drawScore(ctx);\n\n        if (!this.started) {\n            this.drawStartScreen(ctx);\n        }\n    }\n\n    drawPipes(ctx) {\n        this.pipes.forEach(pipe => pipe.draw(ctx))\n    }\n\n    drawScore(ctx) {\n        if (!this.ended) {\n            ctx.font = \"40px 'Press Start 2P'\";\n            ctx.fillStyle = \"white\";\n            ctx.textAlign = \"center\";\n            ctx.strokeText(this.score, 240, 130);\n            ctx.fillText(this.score, 240, 130);\n        }\n    }\n\n    drawStartScreen(ctx) {\n        ctx.lineWidth = 10;\n        ctx.strokeStyle = \"white\";\n        ctx.strokeRect(96, 213, 488, 50);\n        ctx.fillStyle = \"#ff6600\";\n        ctx.fillRect(96, 213, 488, 50);\n\n        ctx.font = \"12px 'Press Start 2P'\";\n        ctx.save();\n        ctx.shadowColor = \"black\";\n        ctx.fillStyle = \"white\";\n        ctx.textAlign = \"center\";\n        ctx.fillText(\"PRESS SPACEBAR TO START OR REFRESH PAGE TO CHANGE SETTINGS\", 340, 245);\n        ctx.restore();\n    }\n\n    removeOffscreenPipes() {\n        let onScreenPipes = this.pipes.filter(pipe => !pipe.isOffScreen());\n        this.pipes = onScreenPipes;\n    }\n\n    step() {\n        this.sheen.move();\n\n        if (this.movePipe) {\n            this.pipes.forEach(pipe => {\n                pipe.move();\n            })\n        }\n\n        this.checkCollision();\n        this.updateScore();\n    }\n\n    updateScore() {\n        this.pipes.forEach(pipe => {\n            if (!pipe.scored && (this.sheen.x > pipe.x + pipe.width)) {\n                pipe.scored = true;\n                this.score ++;\n            }\n        })\n    }\n}\n\nexport default Game;","import { startGame } from \"./flappy_sheen\";\n\nclass GameView {\n    constructor(game, ctx, properties) {\n        this.ctx = ctx;\n        this.game = game;\n        this.properties = properties;\n\n        this.animate = this.animate.bind(this);\n        this.animation = () => {\n            this.interval = setInterval(this.animate, 20);\n            return this.interval;\n        }\n    }\n\n    animate() {\n        this.game.step();\n        this.game.draw(this.ctx);\n\n        if (!this.game.started) {\n            clearInterval(this.interval);\n        }\n\n        if (this.game.ended) {\n            clearInterval(this.interval);\n            this.bindKeyToRestart();\n        }\n    }\n\n    bindKeyToRestart() {\n        key(\"space\", () => {\n            key.unbind(\"space\");\n            setTimeout(() => startGame(this.properties));\n        })\n    }\n\n    bindKeyToStart() {\n        key(\"space\", () => {\n            key.unbind(\"space\");\n            this.bindKeyToFly();\n            this.animation();\n            this.game.started = true;\n        });\n    }\n\n    bindKeyToFly() {\n        key(\"space\", () => { this.game.sheen.up() })\n    }\n\n    start() {\n        this.bindKeyToStart();\n        this.animation();\n    }\n}\n\nexport default GameView;","import Game from \"./game\";\nimport GameView from \"./game_view\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    if (window.history.replaceState) {\n        window.history.replaceState(null, null, window.location.href);\n    }\n    var pristine;\n    window.onload = function () {\n        var form = document.getElementById(\"myForm\");\n        pristine = new Pristine(form);\n        form.addEventListener('submit', function (e) {\n            e.preventDefault();\n            var valid = pristine.validate();\n            if (valid) {\n                document.getElementById(\"form-container\").style.display = \"none\";\n                const nephew = form[\"nephew\"].value;\n                const pipeWidth = Number(form[\"pipeWidth\"].value);\n                // const nephew = form[\"nephew\"].value;\n                // const nephew = form[\"nephew\"].value;\n                // const nephew = form[\"nephew\"].value;\n                // const nephew = form[\"nephew\"].value;\n                // const nephew = form[\"nephew\"].value;\n                // const nephew = form[\"nephew\"].value;\n                // const nephew = form[\"nephew\"].value;\n\n                const properties = { nephew, pipeWidth }\n                startGame(properties);\n            }\n        });\n    };\n});\n\nexport const startGame = (properties) => {\n    const canvasEl = document.getElementById(\"myCanvas\");\n    canvasEl.style.display = \"block\";\n\n    // Full screen\n    canvasEl.width = window.innerWidth;\n    canvasEl.height = window.innerHeight;\n\n    properties.canvasWidth = canvasEl.width;\n    properties.canvasHeight = canvasEl.height;\n  \n    const ctx = canvasEl.getContext(\"2d\");\n    const game = new Game(properties);\n\n    new GameView(game, ctx, properties).start();\n}\n"],"sourceRoot":""}