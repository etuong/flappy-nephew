{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./lib/sheen.js","webpack:///./lib/pipe.js","webpack:///./lib/game.js","webpack:///./lib/game_view.js","webpack:///./lib/flappy_sheen.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","sheen","[object Object]","canvasHeight","this","y","x","width","height","gravity","lift","velocity","img","Image","src","ctx","drawImage","stayInFrame","stopAtBottom","pipe","canvasWidth","minPipeHeight","maxPipeHeight","minSpaceHeight","maxSpaceHeight","topPipeHeight","getRandomInt","bottomPipeHeight","calculateBottomPipe","speed","scored","spaceHeight","getSpaceHeight","gradient","createLinearGradient","addColorStop","lineWidth","strokeStyle","strokeRect","fillStyle","fillRect","min","max","Math","floor","random","maxSpaceAvailable","inRangeHor","inRangeVer","lib_game","pipes","frameCount","movePipe","started","ended","score","forEach","hit","key","unbind","drawFrame","font","textAlign","fillText","strokeText","save","shadowColor","shadowOffsetX","shadowOffsetY","restore","push","drawPipes","removeOffscreenPipes","draw","hitGround","drawEndScreen","drawScore","drawStartScreen","onScreenPipes","filter","isOffScreen","move","checkCollision","updateScore","game_view","game","animate","bind","animation","interval","setInterval","step","clearInterval","bindKeyToRestart","setTimeout","startGame","bindKeyToFly","up","bindKeyToStart","document","addEventListener","lastScore","canvasEl","getElementById","window","innerWidth","innerHeight","getContext","start"],"mappings":"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","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","class Sheen {\n    constructor(canvasHeight) {\n        this.canvasHeight = canvasHeight;\n\n        // Initial position\n        this.y = (this.canvasHeight / 2);\n        this.x = 200;\n\n        // Size\n        this.width = 67;\n        this.height = 80;\n\n        // Physics\n        this.gravity = 0.7;\n        this.lift = -15;\n        this.velocity = 0;\n\n        // Sheen image\n        this.img = new Image();\n        this.img.src = \"assets/joseph.png\";\n    }\n\n    draw(ctx) {\n        ctx.drawImage(this.img, this.x, this.y);\n    }\n\n    hitGround() {\n        return this.y === this.canvasHeight;\n    }\n\n    move() {\n        this.velocity += this.gravity;\n        this.velocity *= 0.9;\n        this.y += this.velocity;\n        this.stayInFrame();\n        this.stopAtBottom();\n    }\n\n    stayInFrame() {\n        if (this.y > this.canvasHeight) {\n            this.y = this.canvasHeight;\n            this.velocity = 0;\n        }\n    }\n\n    stopAtBottom() {\n        if (this.y < 0) {\n            this.y = 0;\n            this.velocity = 0;\n        }\n    }\n\n    up() {\n        this.velocity += this.lift;\n    }\n};\n\nexport default Sheen;","class Pipe {\n    constructor(canvasWidth, canvasHeight) {\n        this.canvasHeight = canvasHeight;\n        this.x = canvasWidth;\n        this.width = 100;\n\n        this.minPipeHeight = 100;\n        this.maxPipeHeight = 700;\n\n        this.minSpaceHeight = 160;\n        this.maxSpaceHeight = 240;\n\n        this.topPipeHeight = this.getRandomInt(this.minPipeHeight, this.maxPipeHeight + 1);\n        this.bottomPipeHeight = this.calculateBottomPipe();\n        \n        this.speed = 5;\n        this.scored = false;\n    }\n\n    calculateBottomPipe() {\n        const spaceHeight = this.getSpaceHeight();\n        return this.canvasHeight - this.topPipeHeight - spaceHeight;\n    }\n\n    draw(ctx) {\n        let gradient = ctx.createLinearGradient(this.x, 0, this.x + this.width, 0);\n        gradient.addColorStop(0, \"#33cc33\")\n        gradient.addColorStop(1, \"#99ff99\")\n\n        // Top pipe\n        ctx.lineWidth = 3;\n        ctx.strokeStyle = \"black\";\n        ctx.strokeRect(this.x, 0, this.width, this.topPipeHeight - 20);\n        ctx.fillStyle = gradient;\n        ctx.fillRect(this.x, 0, this.width, this.topPipeHeight - 20);\n        ctx.strokeRect(this.x - 5, this.topPipeHeight - 20, this.width + 10, 20);\n        ctx.fillRect(this.x - 5, this.topPipeHeight - 20, this.width + 10, 20);\n\n        // Bottom pipe\n        ctx.strokeRect(this.x, this.canvasHeight - (this.bottomPipeHeight - 20), this.width, this.bottomPipeHeight);\n        ctx.fillRect(this.x, this.canvasHeight - (this.bottomPipeHeight - 20), this.width, this.bottomPipeHeight);\n        ctx.strokeRect(this.x - 5, this.canvasHeight - this.bottomPipeHeight, this.width + 10, 20);\n        ctx.fillRect(this.x - 5, this.canvasHeight - this.bottomPipeHeight, this.width + 10, 20);\n    }\n\n    getRandomInt(min, max) {\n        return Math.floor(Math.random() * (max - min)) + min;\n    }\n\n    getSpaceHeight() {\n        const spaceAndBottomHeight = this.canvasHeight - this.topPipeHeight;\n        const maxSpaceAvailable = spaceAndBottomHeight - this.minPipeHeight;\n\n        if (maxSpaceAvailable > this.maxSpaceHeight) {\n            return this.getRandomInt(this.minSpaceHeight, this.maxSpaceHeight + 1);\n        } else {\n            return this.getRandomInt(this.minSpaceHeight, maxSpaceAvailable)\n        }\n    }\n\n    hit(sheen) {\n        return (this.inRangeHor(sheen) && this.inRangeVer(sheen))\n    }\n\n    inRangeHor(sheen) {\n        return ((sheen.x > this.x) && (sheen.x < this.x + this.width)) || ((sheen.x + sheen.width > this.x) && (sheen.x + sheen.width < this.x + this.width))\n    }\n\n    inRangeVer(sheen) {\n        return ((sheen.y < this.topPipeHeight) || (sheen.y + sheen.height > this.canvasHeight - this.bottomPipeHeight))\n    }\n\n    isOffScreen() {\n        return this.x < -this.width;\n    }\n\n    move() {\n        this.x -= this.speed;\n    }\n}\n\nexport default Pipe;","import Sheen from \"./sheen\";\nimport Pipe from \"./pipe\";\n\nclass Game {\n    constructor(canvasWidth, canvasHeight) {\n        // Canvas size\n        this.width = canvasWidth;\n        this.height = canvasHeight;\n\n        this.sheen = new Sheen(canvasHeight);\n        this.pipes = [new Pipe(canvasWidth, canvasHeight)];\n        this.frameCount = 0;\n        this.movePipe = true;\n        this.started = false;\n        this.ended = false;\n        this.score = 0;\n\n        this.img = new Image();\n        this.img.src = \"assets/background.jpg\";\n    }\n\n    checkCollision() {\n        this.pipes.forEach(pipe => {\n            if (pipe.hit(this.sheen)) {\n                key.unbind(\"space\");\n                this.movePipe = false;\n            }\n        })\n    }\n\n    draw(ctx) {\n        this.frameCount++;\n        this.drawFrame(ctx);\n    }\n    \n    drawEndScreen(ctx) {\n        // Score Box\n        ctx.lineWidth = 3;\n        ctx.strokeRect(192, 236, 96, 110);\n        ctx.fillStyle = \"#ffe6b3\";\n        ctx.fillRect(192, 236, 96, 110);\n\n        // Score box text\n        ctx.font = \"13px 'Press Start 2P\";\n        ctx.fillStyle = \"#ff6600\";\n        ctx.textAlign = \"center\";\n        ctx.fillText(\"SCORE\", 240, 280);\n        ctx.font = \"24px 'Press Start 2P\";\n        ctx.fillStyle = \"white\";\n        ctx.textAlign = \"center\";\n        ctx.strokeText(this.score, 240, 320);\n        ctx.fillText(this.score, 240, 320);\n\n        ctx.lineWidth = 10;\n        ctx.strokeStyle = \"white\";\n        ctx.strokeRect(86, 364, 308, 50);\n        ctx.fillStyle = \"#ff6600\";\n        ctx.fillRect(86, 364, 308, 50);\n\n        ctx.font = \"12px 'Press Start 2P'\"\n        ctx.save();\n        ctx.shadowColor = \"black\";\n        ctx.shadowOffsetX = 2;\n        ctx.shadowOffsetY = 2;\n        ctx.fillStyle = \"white\";\n        ctx.textAlign = \"center\";\n        ctx.fillText(\"PRESS SPACEBAR TO RESTART\", 240, 395);\n        ctx.restore();\n    }\n\n    drawFrame(ctx) {\n        ctx.drawImage(this.img, 0, 0);\n\n        if (this.frameCount % 110 == 0) {\n            this.pipes.push(new Pipe(this.width, this.height))\n        }\n\n        this.drawPipes(ctx);\n        this.removeOffscreenPipes();\n        this.sheen.draw(ctx);\n\n        if (this.sheen.hitGround()) {\n            this.ended = true;\n            this.drawEndScreen(ctx)\n        }\n\n        this.drawScore(ctx);\n\n        if (!this.started) {\n            this.drawStartScreen(ctx);\n        }\n    }\n\n    drawPipes(ctx) {\n        this.pipes.forEach(pipe => pipe.draw(ctx))\n    }\n\n    drawScore(ctx) {\n        if (!this.ended) {\n            ctx.font = \"40px 'Press Start 2P'\";\n            ctx.fillStyle = \"white\";\n            ctx.textAlign = \"center\";\n            ctx.strokeText(this.score, 240, 130);\n            ctx.fillText(this.score, 240, 130);\n        }\n    }\n\n    drawStartScreen(ctx) {\n        ctx.lineWidth = 10;\n        ctx.strokeStyle = \"white\";\n        ctx.strokeRect(96, 213, 288, 50);\n        ctx.fillStyle = \"#ff6600\";\n        ctx.fillRect(96, 213, 288, 50);\n\n        ctx.font = \"12px 'Press Start 2P'\";\n        ctx.save();\n        ctx.shadowColor = \"black\";\n        ctx.shadowOffsetX = 2;\n        ctx.shadowOffsetY = 2;\n        ctx.fillStyle = \"white\";\n        ctx.textAlign = \"center\";\n        ctx.fillText(\"PRESS SPACEBAR TO START\", 240, 245);\n        ctx.restore();\n    }\n\n    removeOffscreenPipes() {\n        let onScreenPipes = this.pipes.filter(pipe => !pipe.isOffScreen());\n        this.pipes = onScreenPipes;\n    }\n\n    step() {\n        this.sheen.move();\n\n        if (this.movePipe) {\n            this.pipes.forEach(pipe => {\n                pipe.move();\n            })\n        }\n\n        this.checkCollision();\n        this.updateScore();\n    }\n\n    updateScore() {\n        this.pipes.forEach(pipe => {\n            if (!pipe.scored && (this.sheen.x > pipe.x + pipe.width)) {\n                pipe.scored = true;\n                this.score ++;\n            }\n        })\n    }\n}\n\nexport default Game;","import { startGame } from \"./flappy_sheen\";\n\nclass GameView {\n    constructor(game, ctx) {\n        this.ctx = ctx;\n        this.game = game;\n        \n        this.animate = this.animate.bind(this);\n        this.animation = () => {\n            this.interval = setInterval(this.animate, 20);\n            return this.interval;\n        }\n    }\n\n    animate() {\n        this.game.step();\n        this.game.draw(this.ctx);\n\n        if (!this.game.started) {\n            clearInterval(this.interval);\n        }\n\n        if (this.game.ended) {\n            clearInterval(this.interval);\n            this.bindKeyToRestart();\n        }\n    }\n\n    bindKeyToRestart() {\n        key(\"space\", () => {\n            key.unbind(\"space\");\n            setTimeout(() => startGame(this.game.score));\n        })\n    }\n    \n    bindKeyToStart() {\n        key(\"space\", () => { \n            key.unbind(\"space\");\n            this.bindKeyToFly();\n            this.animation();\n            this.game.started = true;\n        });\n    }\n\n    bindKeyToFly() {\n        key(\"space\", () => { this.game.sheen.up() })\n    }\n\n    start() {\n        this.bindKeyToStart();\n        this.animation();\n    }\n}\n\nexport default GameView;","import Game from \"./game\";\nimport GameView from \"./game_view\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    startGame(0);\n});\n\nexport const startGame = (lastScore) => {\n    const canvasEl = document.getElementById(\"myCanvas\");\n\n    // Full screen\n    canvasEl.width = window.innerWidth;\n    canvasEl.height = window.innerHeight;\n\n    const ctx = canvasEl.getContext(\"2d\");\n    const game = new Game(canvasEl.width, canvasEl.height);\n    \n    new GameView(game, ctx).start();\n}\n"],"sourceRoot":""}